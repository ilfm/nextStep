<?xml version="1.0" encoding="UTF-8"?><testrun name="StringCalculatorTest (1)" project="nextStepProjectStep2" tests="2" started="2" failures="0" errors="1" ignored="0">
  <testsuite name="nextStepProjectStep2.StringCalculatorTest" time="0.006">
    <testcase name="testStringCalculater" classname="nextStepProjectStep2.StringCalculatorTest" time="0.0"/>
    <testcase name="testCustomStringCalculater" classname="nextStepProjectStep2.StringCalculatorTest" time="0.006">
      <error>java.util.regex.PatternSyntaxException: Illegal/unsupported escape sequence near index 2&#13;
[\b//](.*?)[\b
]&#13;
  ^&#13;
	at java.base/java.util.regex.Pattern.error(Pattern.java:2027)&#13;
	at java.base/java.util.regex.Pattern.escape(Pattern.java:2616)&#13;
	at java.base/java.util.regex.Pattern.range(Pattern.java:2803)&#13;
	at java.base/java.util.regex.Pattern.clazz(Pattern.java:2713)&#13;
	at java.base/java.util.regex.Pattern.sequence(Pattern.java:2138)&#13;
	at java.base/java.util.regex.Pattern.expr(Pattern.java:2068)&#13;
	at java.base/java.util.regex.Pattern.compile(Pattern.java:1782)&#13;
	at java.base/java.util.regex.Pattern.&lt;init&gt;(Pattern.java:1428)&#13;
	at java.base/java.util.regex.Pattern.compile(Pattern.java:1068)&#13;
	at nextStepProjectStep2.StringCalculator.findCustomSeperator(StringCalculator.java:20)&#13;
	at nextStepProjectStep2.StringCalculatorTest.testCustomStringCalculater(StringCalculatorTest.java:25)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#13;
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#13;
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#13;
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
